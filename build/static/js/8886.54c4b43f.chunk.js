"use strict";(self.webpackChunkfuse_react_app=self.webpackChunkfuse_react_app||[]).push([[8886],{98886:function(e,n,t){t.r(n);var o=t(98655),r=t(61113),i=t(29466),s=t(46417);n.default=function(){return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.Z,{variant:"h4",className:"mb-40 font-700",children:"FuseTheme"}),(0,s.jsxs)(r.Z,{className:"mb-16",component:"p",children:[(0,s.jsx)("code",{children:"FuseTheme"})," is the theming component of the Fuse React. It allows us to change predefined Material UI themes. It should wrap the ",(0,s.jsx)("code",{children:"FuseLayout"})," component."]}),(0,s.jsx)(r.Z,{className:"mb-16",component:"p",children:(0,s.jsx)("code",{children:"src/app/App.js"})}),(0,s.jsx)(o.Z,{component:"pre",className:"language-jsx",children:t(39025)}),(0,s.jsx)(r.Z,{className:"text-20 mt-20 mb-10 font-700",variant:"h5",children:"Configuration"}),(0,s.jsxs)(r.Z,{className:"mb-16",component:"p",children:["Please checkout",(0,s.jsx)(i.rU,{className:"font-normal mx-4",to:"/documentation/theming/theme-schemes",children:"theming"}),"at documentation."]})]})}},39025:function(e,n,t){t.r(n),n.default="import '@mock-api';\nimport BrowserRouter from '@fuse/core/BrowserRouter';\nimport FuseLayout from '@fuse/core/FuseLayout';\nimport FuseTheme from '@fuse/core/FuseTheme';\nimport { SnackbarProvider } from 'notistack';\nimport { useSelector } from 'react-redux';\nimport rtlPlugin from 'stylis-plugin-rtl';\nimport createCache from '@emotion/cache';\nimport { CacheProvider } from '@emotion/react';\nimport { selectCurrentLanguageDirection } from 'app/store/i18nSlice';\nimport { selectUser } from 'app/store/userSlice';\nimport themeLayouts from 'app/theme-layouts/themeLayouts';\nimport { selectMainTheme } from 'app/store/fuse/settingsSlice';\nimport FuseAuthorization from '@fuse/core/FuseAuthorization';\nimport settingsConfig from 'app/configs/settingsConfig';\nimport withAppProviders from './withAppProviders';\nimport { AuthProvider } from './auth/AuthContext';\n\n// import axios from 'axios';\n/**\n * Axios HTTP Request defaults\n */\n// axios.defaults.baseURL = \"\";\n// axios.defaults.headers.common['Access-Control-Allow-Origin'] = '*';\n// axios.defaults.headers.common['Content-Type'] = 'application/x-www-form-urlencoded';\n\nconst emotionCacheOptions = {\n  rtl: {\n    key: 'muirtl',\n    stylisPlugins: [rtlPlugin],\n    insertionPoint: document.getElementById('emotion-insertion-point'),\n  },\n  ltr: {\n    key: 'muiltr',\n    stylisPlugins: [],\n    insertionPoint: document.getElementById('emotion-insertion-point'),\n  },\n};\n\nconst App = () => {\n  const user = useSelector(selectUser);\n  const langDirection = useSelector(selectCurrentLanguageDirection);\n  const mainTheme = useSelector(selectMainTheme);\n\n  return (\n    <CacheProvider value={createCache(emotionCacheOptions[langDirection])}>\n      <FuseTheme theme={mainTheme} direction={langDirection}>\n        <AuthProvider>\n          <BrowserRouter>\n            <FuseAuthorization\n              userRole={user.role}\n              loginRedirectUrl={settingsConfig.loginRedirectUrl}\n            >\n              <SnackbarProvider\n                maxSnack={5}\n                anchorOrigin={{\n                  vertical: 'bottom',\n                  horizontal: 'right',\n                }}\n                classes={{\n                  containerRoot: 'bottom-0 right-0 mb-52 md:mb-68 mr-8 lg:mr-80 z-99',\n                }}\n              >\n                <FuseLayout layouts={themeLayouts} />\n              </SnackbarProvider>\n            </FuseAuthorization>\n          </BrowserRouter>\n        </AuthProvider>\n      </FuseTheme>\n    </CacheProvider>\n  );\n};\n\nexport default withAppProviders(App)();\n"}}]);